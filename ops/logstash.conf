input {
    #stdin {}
    gelf {
        #        port => 12201
        #        type => gelf
    }
    #file {
    #  path =>  ["/usr/share/logstash/pipeline/if-sitesearch.log"]
    #}
}
filter {
    #    grok {
    #        match => [
    #        "message", "^.+ %{LOGLEVEL:log_level}.+siteId: %{UUID:siteId}.+query: %{WORD:query}.+results: %{NONNEGINT:results}%{GREEDYDATA:tail}$",
    #        "message", "^.+ %{LOGLEVEL:log_level}.+siteId: %{UUID:siteId} .+bodySize: %{INT:bodySize} .+titleSize: %{NUMBER:titleSize} .+URL: %{URI:url}%{GREEDYDATA:tail}$"
    #        ]
    #    }

    grok {
        match => [
        "message", "^.+ %{LOGLEVEL:log_level}.+siteId: %{UUID:siteId}.+query: %{WORD:query}.+results: %{NUMBER:results:int}%{GREEDYDATA:tail}$"
            ]
            add_tag => ["search"]
    }

    grok {
        match => [
        "message", "^.+ %{LOGLEVEL:log_level}.+siteId: %{UUID:siteId} .+bodySize: %{NUMBER:bodySize:int} .+titleSize: %{NUMBER:titleSize:int} .+URL: %{URI:url}%{GREEDYDATA:tail}$"
        ]
        add_tag => ["index"]
    }

    # if log line contains tab character followed by "at" then we will tag that entry as stacktrace
    if [message] =~ "\tat" {
        grok {
            match => ["message", "^(\tat)"]
            add_tag => ["stacktrace"]
        }
    }
}
output {
    elasticsearch {
        hosts => [ "ops-elasticsearch", "ops-elasticsearch-opt" ]
    }
}
