/*
 * Copyright 2017 IntraFind Software AG. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
        swaggerVersion = '2.7.0'
    }
//    repositories {
//        mavenCentral()
//    }
}

plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "1.5.6.RELEASE"
    id "me.champeau.gradle.jmh" version "0.3.1"
}

jar {
    baseName = rootProject.name
    version = '1.0.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2' }
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude module: 'undertow-websockets-jsr'
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-hateoas:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"

    compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")

    compile "io.springfox:springfox-swagger2:${swaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    compile "org.springframework.data:spring-data-elasticsearch:2.1.6.RELEASE"

    runtime 'net.java.dev.jna:jna:4.4.0'

    testCompile "org.openjdk.jmh:jmh-generator-annprocess:1.19"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

jmh {
    fork = 0
    setDuplicateClassesStrategy(DuplicatesStrategy.INCLUDE)
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.incremental = true
}
